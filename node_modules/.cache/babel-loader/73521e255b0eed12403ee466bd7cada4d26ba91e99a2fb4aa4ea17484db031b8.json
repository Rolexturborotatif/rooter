{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redga\\\\OneDrive\\\\Bureau\\\\React Router\\\\src\\\\Components\\\\Description\\\\Description.js\",\n  _s = $RefreshSig$();\nimport \"./description.css\";\nimport { useParams } from \"react-router-dom\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Description(_ref) {\n  _s();\n  let {\n    list\n  } = _ref;\n  console.log(list.length);\n  let params = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"desc\",\n    children: isNaN(params.id) || list.length <= parseInt(params.id) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Movie With this id \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 77\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MovieCard, {\n        ele: list[params.id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: list[params.id].trailer,\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(Description, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = Description;\nvar _c;\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"names":["useParams","MovieCard","Description","list","console","log","length","params","isNaN","id","parseInt","trailer"],"sources":["C:/Users/redga/OneDrive/Bureau/React Router/src/Components/Description/Description.js"],"sourcesContent":["import \"./description.css\";\nimport {useParams} from \"react-router-dom\";\nimport MovieCard from \"../MovieCard/MovieCard\";\n\nexport default function Description({list}) {\n\n    console.log(list.length);\n    let params = useParams();\n    return (\n        <div className=\"desc\">\n            {  ( isNaN(params.id) || list.length <= parseInt(params.id)) ?  <p>No Movie With this id </p> :\n            \n            <>\n            <MovieCard ele={list[params.id]} /> \n            <iframe width=\"560\" height=\"315\" src={list[params.id].trailer}\n                title=\"YouTube video player\" frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen></iframe>\n            </>\n            }\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,SAAQA,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAAA;AAE/C,eAAe,SAASC,WAAW,OAAS;EAAA;EAAA,IAAR;IAACC;EAAI,CAAC;EAEtCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,MAAM,CAAC;EACxB,IAAIC,MAAM,GAAGP,SAAS,EAAE;EACxB,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,UACZQ,KAAK,CAACD,MAAM,CAACE,EAAE,CAAC,IAAIN,IAAI,CAACG,MAAM,IAAII,QAAQ,CAACH,MAAM,CAACE,EAAE,CAAC,gBAAK;MAAA,UAAG;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAI,gBAE7F;MAAA,wBACA,QAAC,SAAS;QAAC,GAAG,EAAEN,IAAI,CAACI,MAAM,CAACE,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACnC;QAAQ,KAAK,EAAC,KAAK;QAAC,MAAM,EAAC,KAAK;QAAC,GAAG,EAAEN,IAAI,CAACI,MAAM,CAACE,EAAE,CAAC,CAACE,OAAQ;QAC1D,KAAK,EAAC,sBAAsB;QAAC,WAAW,EAAC,GAAG;QAC5C,KAAK,EAAC,0FAA0F;QAChG,eAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;EAC1B;IAAA;IAAA;IAAA;EAAA,QAED;AAEd;AAAC,GAlBuBT,WAAW;EAAA,QAGlBF,SAAS;AAAA;AAAA,KAHFE,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}